{"version":3,"sources":["Components/CustomCard.js","App.js","reportWebVitals.js","index.js"],"names":["CustomCard","gameImg","gameName","useState","flip","setFlip","isFlipped","flipDirection","flipSpeedFrontToBack","style","backgroundColor","borderStyle","onClick","e","preventDefault","top","width","src","alt","borderRadius","Card","height","CardImg","CardBody","CardTitle","tag","textAlign","App","className","backgroundImage","process","backgroundRepeat","backgroundPosition","backgroundSize","Container","paddingTop","fontFamily","fontWeight","fontSize","Row","marginBottom","map","item","index","Col","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAoCeA,EAhCI,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAAe,EACpBC,oBAAS,GADW,mBACrCC,EADqC,KAC/BC,EAD+B,KAM5C,OACE,8BACE,eAAC,IAAD,CACEC,UAAWF,EACXG,cAAc,aACdC,qBAAsB,EAHxB,UAKE,mCACE,wBACEC,MAAO,CAAEC,gBAAiB,cAAeC,YAAa,UACtDC,QAdU,SAACC,GACnBA,EAAEC,iBACFT,GAAQ,IAUF,SAIE,qBAAKU,KAAG,EAACC,MAAM,OAAOC,IAAI,uBAAuBC,IAAKhB,EAAUO,MAAO,CAACU,aAAa,YAGzF,eAACC,EAAA,EAAD,CAAMX,MAAO,CAACO,MAAM,IAAKK,OAAO,KAAhC,UACE,cAACC,EAAA,EAAD,CAASP,KAAG,EAACC,MAAM,OAAOC,IAAG,iBAAYhB,GAAWiB,IAAKhB,IACzD,cAACqB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAWC,IAAI,KAAKhB,MAAO,CAACiB,UAAW,UAAvC,SAAmDxB,e,wBCgEhDyB,MA1Ff,WA6CE,OACE,qBACEC,UAAU,MACVnB,MAAO,CACLoB,gBAAgB,OAAD,OAASC,6BAAT,KACfC,iBAAkB,YAClBC,mBAAoB,SACpBC,eAAgB,QAChBZ,OAAQ,SAPZ,SAUE,eAACa,EAAA,EAAD,CAAWzB,MAAO,CAAE0B,WAAY,SAAhC,UACE,oBACE1B,MAAO,CACL2B,WAAY,eACZC,WAAY,IACZC,SAAU,OACVZ,UAAW,UALf,yBAUA,cAACa,EAAA,EAAD,CAAKX,UAAU,QAAQnB,MAAO,CAAE+B,aAAc,QAA9C,SAlEO,CACX,CACEtC,SAAU,qBACVD,QAAS,iBAEX,CACEC,SAAU,mCACVD,QAAS,iBAEX,CACEC,SAAU,yBACVD,QAAS,iBAEX,CACEC,SAAU,mCACVD,QAAS,iBAEX,CACEC,SAAU,WACVD,QAAS,kBAgDCwC,KAAI,SAACC,EAAMC,GACf,OACE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,CAAM3C,QAASyC,EAAKzC,QAASC,SAAUwC,EAAKxC,YADpCyC,QAMhB,cAACJ,EAAA,EAAD,CAAKX,UAAU,QAAf,SArDO,CACX,CACE1B,SAAU,kCACVD,QAAS,iBAEX,CACEC,SAAU,OACVD,QAAS,iBAEX,CACEC,SAAU,YACVD,QAAS,iBAEX,CACEC,SAAU,gBACVD,QAAS,iBAEX,CACEC,SAAU,iBACVD,QAAS,kBAmCCwC,KAAI,SAACC,EAAMC,GACf,OACE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,CAAM3C,QAASyC,EAAKzC,QAASC,SAAUwC,EAAKxC,YADpCyC,cCrETE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0cd0564e.chunk.js","sourcesContent":["import ReactCardFlip from \"react-card-flip\";\nimport { useState } from \"react\";\n\nimport { Card, CardImg, CardBody, CardTitle, Button } from \"reactstrap\";\nconst CustomCard = ({ gameImg, gameName }) => {\n  const [flip, setFlip] = useState(false);\n  const handleClick = (e) => {\n    e.preventDefault();\n    setFlip(true);\n  };\n  return (\n    <div>\n      <ReactCardFlip\n        isFlipped={flip}\n        flipDirection=\"horizontal\"\n        flipSpeedFrontToBack={1}\n      >\n        <>\n          <button\n            style={{ backgroundColor: \"transparent\", borderStyle: \"hidden\"}}\n            onClick={handleClick}\n          >\n            <img top width=\"100%\" src=\"assets/card_back.png\" alt={gameName} style={{borderRadius:\"4%\"}}/>\n          </button>\n        </>\n        <Card style={{width:232, height:348}}>\n          <CardImg top width=\"100%\" src={`assets/${gameImg}`} alt={gameName} />\n          <CardBody>\n            <CardTitle tag=\"h3\" style={{textAlign: \"center\"}}>{gameName}</CardTitle>\n          </CardBody>\n        </Card>\n      </ReactCardFlip>\n    </div>\n  );\n};\n\nexport default CustomCard;\n","import Card from \"./Components/CustomCard\";\nimport { Container, Row, Col } from \"reactstrap\";\nfunction App() {\n  const row1 = [\n    {\n      gameName: \"Grand Theft Auto V\",\n      gameImg: \"deathnote.jpg\",\n    },\n    {\n      gameName: \"Need For Speed: Most Wanted 2012\",\n      gameImg: \"deathnote.jpg\",\n    },\n    {\n      gameName: \"Red Dead Redemption II\",\n      gameImg: \"deathnote.jpg\",\n    },\n    {\n      gameName: \"Counter Strike: Global-Offensive\",\n      gameImg: \"deathnote.jpg\",\n    },\n    {\n      gameName: \"VALORANT\",\n      gameImg: \"deathnote.jpg\",\n    },\n  ];\n  const row2 = [\n    {\n      gameName: \"Player's Unknown Battle Grounds\",\n      gameImg: \"deathnote.jpg\",\n    },\n    {\n      gameName: \"HALO\",\n      gameImg: \"deathnote.jpg\",\n    },\n    {\n      gameName: \"Fall Guys\",\n      gameImg: \"deathnote.jpg\",\n    },\n    {\n      gameName: \"Rocket League\",\n      gameImg: \"deathnote.jpg\",\n    },\n    {\n      gameName: \"Genshin Impact\",\n      gameImg: \"deathnote.jpg\",\n    },\n  ];\n  return (\n    <div\n      className=\"App\"\n      style={{\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"assets/back.png\"})`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        height: \"100vh\",\n      }}\n    >\n      <Container style={{ paddingTop: \"0.25%\" }}>\n        <h1\n          style={{\n            fontFamily: \"Patrick Hand\",\n            fontWeight: 900,\n            fontSize: \"7rem\",\n            textAlign: \"center\",\n          }}\n        >\n          COMIC STRIP\n        </h1>\n        <Row className=\"myRow\" style={{ marginBottom: \"2.5%\" }}>\n          {row1.map((item, index) => {\n            return (\n              <Col key={index}>\n                <Card gameImg={item.gameImg} gameName={item.gameName} />\n              </Col>\n            );\n          })}\n        </Row>\n        <Row className=\"myRow\">\n          {row2.map((item, index) => {\n            return (\n              <Col key={index}>\n                <Card gameImg={item.gameImg} gameName={item.gameName} />\n              </Col>\n            );\n          })}\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}